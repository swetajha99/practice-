1. You are given a number n, representing the size of array a.
2. You are given n numbers, representing the height of bars in a bar chart.
3. You are required to find and print the area of largest rectangle in the histogram.

e.g.
for the array [6 2 5 4 5 1 6] -> 12

import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(br.readLine());
    int[] arr = new int[n];
    for(int i = 0; i < n; i++){
       arr[i] = Integer.parseInt(br.readLine());
    }
    
    // code
    
    int[] rb = new int[arr.length];
    //to find the next smaller element n the left
    Stack<Integer> srb = new Stack<>();
    srb.push(arr.length-1);
    rb[arr.length-1] = arr.length;
    for(int i=arr.length-2;i>=0;i--){
        while(srb.size()>0 && arr[i]<=arr[srb.peek()]){
            srb.pop();
        }
        
        if(srb.size()==0){ rb[i]=arr.length;}
        else{ rb[i] = srb.peek();}
        
        srb.push(i);
    }
    
    int[] lb = new int[arr.length];
    //to find the next smaller element on the right
    Stack<Integer> slb = new Stack<>();
    slb.push(0);
    lb[0] = -1;
    for(int i=1;i<arr.length;i++){
        while(slb.size()>0 && arr[i]<=arr[slb.peek()]){
            slb.pop();
        }
        
        if(slb.size()==0) {lb[i]=-1;}
        else{ lb[i] = slb.peek();}
        
        slb.push(i);
    }
    
    int maxArea = 0;
    for(int i=0;i<arr.length;i++){
        int width = rb[i]-lb[i]-1;
        int area = arr[i]*width;
        if(area>maxArea) maxArea = area;
    }
    
    System.out.println(maxArea);
 }
}
